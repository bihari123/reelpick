{"ast":null,"code":"var _jsxFileName = \"/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/Upload/UploadForm.tsx\",\n  _s = $RefreshSig$();\n// src/Components/UploadForm/UploadForm.tsx\n\nimport React, { useRef, useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport upload from \"../../assets/Upload.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadForm = ({\n  onFileSelect\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const [dragging, setDragging] = useState(false);\n  const maxSize = 500 * 1024 * 1024; // 500MB\n\n  const openFileDialog = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  const validateFile = file => {\n    if (!file.name.endsWith(\".srt\")) {\n      alert(\"Please upload a valid .srt file.\");\n      return false;\n    }\n    if (file.size > maxSize) {\n      alert(\"File size exceeds 500MB.\");\n      return false;\n    }\n    return true;\n  };\n  const handleFileChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file && validateFile(file)) {\n      onFileSelect(file);\n    }\n  };\n  const handleDrop = event => {\n    var _event$dataTransfer$f;\n    event.preventDefault();\n    event.stopPropagation();\n    setDragging(false);\n    const file = (_event$dataTransfer$f = event.dataTransfer.files) === null || _event$dataTransfer$f === void 0 ? void 0 : _event$dataTransfer$f[0];\n    if (file && validateFile(file)) {\n      onFileSelect(file);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    setDragging(true);\n  };\n  const handleDragLeave = () => {\n    setDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `border-2 border-dashed border-green-500 rounded-lg p-12 bg-white \n        ${dragging ? \"border-green-600\" : \"\"}`,\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center mb-4 border-2 border-green-500 h-16 w-16 rounded-2xl mx-auto shadow-outside-custom\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: upload,\n          alt: \"upload\",\n          className: \"h-16 w-16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 mb-4\",\n        children: \"Drag & Drop or Choose file to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-400\",\n        children: \"Supported formats: .srt (Max size: 500MB)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \".srt\",\n        onChange: handleFileChange,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-4 bg-green-500 text-white py-2 px-6 rounded hover:bg-green-600\",\n        onClick: openFileDialog,\n        children: \"Upload Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n_s(UploadForm, \"cNj4ZgUJv3k/6GDslpOlD+u3D08=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useRef","useState","Button","upload","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadForm","onFileSelect","_s","fileInputRef","dragging","setDragging","maxSize","openFileDialog","current","click","validateFile","file","name","endsWith","alert","size","handleFileChange","event","_event$target$files","target","files","handleDrop","_event$dataTransfer$f","preventDefault","stopPropagation","dataTransfer","handleDragOver","handleDragLeave","children","className","onDrop","onDragOver","onDragLeave","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","accept","onChange","style","display","onClick","_c","$RefreshReg$"],"sources":["/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/Upload/UploadForm.tsx"],"sourcesContent":["// src/Components/UploadForm/UploadForm.tsx\n\nimport React, { useRef, useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport upload from \"../../assets/Upload.svg\";\nimport { UploadFormProps } from \"../Upload/utils/upload.types\";\nimport { FileUploadService } from \"../Upload/services/fileUploadService\";\nimport HeatChart from '../../Components/HeatChart/HeatChart'\nconst UploadForm: React.FC<UploadFormProps> = ({ onFileSelect }) => {\n\tconst fileInputRef = useRef<HTMLInputElement | null>(null);\n\tconst [dragging, setDragging] = useState(false);\n\tconst maxSize = 500 * 1024 * 1024; // 500MB\n\n\tconst openFileDialog = () => {\n\t\tif (fileInputRef.current) {\n\t\t\tfileInputRef.current.click();\n\t\t}\n\t};\n\n\tconst validateFile = (file: File): boolean => {\n\t\tif (!file.name.endsWith(\".srt\")) {\n\t\t\talert(\"Please upload a valid .srt file.\");\n\t\t\treturn false;\n\t\t}\n\t\tif (file.size > maxSize) {\n\t\t\talert(\"File size exceeds 500MB.\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tconst handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst file = event.target.files?.[0];\n\t\tif (file && validateFile(file)) {\n\t\t\tonFileSelect(file);\n\t\t}\n\t};\n\n\tconst handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tsetDragging(false);\n\n\t\tconst file = event.dataTransfer.files?.[0];\n\t\tif (file && validateFile(file)) {\n\t\t\tonFileSelect(file);\n\t\t}\n\t};\n\n\tconst handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n\t\tevent.preventDefault();\n\t\tsetDragging(true);\n\t};\n\n\tconst handleDragLeave = () => {\n\t\tsetDragging(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t<div\n\t\t\tclassName={`border-2 border-dashed border-green-500 rounded-lg p-12 bg-white \n        ${dragging ? \"border-green-600\" : \"\"}`}\n\t\t\tonDrop={handleDrop}\n\t\t\tonDragOver={handleDragOver}\n\t\t\tonDragLeave={handleDragLeave}\n\t\t>\n\t\t\t<div className=\"flex justify-center items-center mb-4 border-2 border-green-500 h-16 w-16 rounded-2xl mx-auto shadow-outside-custom\">\n\t\t\t\t<img src={upload} alt=\"upload\" className=\"h-16 w-16\" />\n\t\t\t</div>\n\t\t\t<p className=\"text-gray-500 mb-4\">Drag & Drop or Choose file to upload</p>\n\t\t\t<p className=\"text-sm text-gray-400\">\n\t\t\t\tSupported formats: .srt (Max size: 500MB)\n\t\t\t</p>\n\n\t\t\t<input\n\t\t\t\tref={fileInputRef}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".srt\"\n\t\t\t\tonChange={handleFileChange}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tclassName=\"mt-4 bg-green-500 text-white py-2 px-6 rounded hover:bg-green-600\"\n\t\t\t\tonClick={openFileDialog}\n\t\t\t>\n\t\t\t\tUpload Now\n\t\t\t</Button>\n\t\t\t\n\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default UploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}