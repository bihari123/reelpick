{"ast":null,"code":"var _jsxFileName = \"/media/tarun/ITB/code/work/video-verse/Videolution-Analyzer-App/src/Components/HeatChart/HeatChart.tsx\";\nimport React from \"react\";\nimport happyFace from \"../../assets/Happy.png\";\nimport grinningFace from \"../../assets/GrinningFaceWithBigEyes.png\";\nimport funnyFace from \"../../assets/Rolling On The Floor Laughing.png\";\nimport surpriseFace from \"../../assets/Flushed Face.png\";\nimport sadFace from \"../../assets/Pensive Face.png\";\nimport staticFace from \"../../assets/Neutral.png\";\nimport angryFace from \"../../assets/AngryFace.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Unified data for the chart and analysis\nconst emotionData = [{\n  timeRange: \"0:00 - 0:30\",\n  time: \"0:00\",\n  emotionValue: 1,\n  emotion: \"Calm and Neutral\",\n  emojiSrc: surpriseFace\n}, {\n  timeRange: \"0:31 - 0:55\",\n  time: \"0:30\",\n  emotionValue: 2,\n  emotion: \"Slightly Confused\",\n  emojiSrc: surpriseFace\n}, {\n  timeRange: \"0:56 - 1:15\",\n  time: \"1:00\",\n  emotionValue: 1,\n  emotion: \"Happy and Engaged\",\n  emojiSrc: grinningFace\n}, {\n  timeRange: \"1:16 - 1:45\",\n  time: \"2:00\",\n  emotionValue: 5,\n  emotion: \"Mild surpriseFace\",\n  emojiSrc: happyFace\n}, {\n  timeRange: \"1:46 - 2:10\",\n  time: \"4:00\",\n  emotionValue: 4,\n  emotion: \"Increasing Excitement\",\n  emojiSrc: grinningFace\n}, {\n  timeRange: \"2:11 - 2:45\",\n  time: \"5:30\",\n  emotionValue: 3,\n  emotion: \"Emotional Dip\",\n  emojiSrc: happyFace\n}, {\n  timeRange: \"2:46 - 3:10\",\n  time: \"7:00\",\n  emotionValue: 5,\n  emotion: \"Tension Rising\",\n  emojiSrc: grinningFace\n}, {\n  timeRange: \"3:11 - 3:33\",\n  time: \"9:00\",\n  emotionValue: 6,\n  emotion: \"Very sadFace and Emotional\",\n  emojiSrc: surpriseFace\n}];\nconst sliderData = [{\n  emojiSrc: angryFace,\n  // replace with your emoji image paths\n  color: \"bg-red-500\" // darker gray for inactive states\n}, {\n  emojiSrc: sadFace,\n  color: \"bg-orange-400\" // lighter gray\n}, {\n  emojiSrc: staticFace,\n  color: \"bg-yellow-400\" // even lighter gray\n}, {\n  emojiSrc: happyFace,\n  color: \"bg-green-400\" // another gray\n}, {\n  emojiSrc: surpriseFace,\n  color: \"bg-green-500\" // green for the active/highlighted state\n}];\n\n// Mapping images for the graph Y-Axis based on the emotion value\nconst emotionImages = [happyFace, grinningFace, funnyFace, surpriseFace, sadFace, staticFace, angryFace];\nconst EmotionChartAnalysis = () => {\n  const labelFormatter = value => `Time: ${value}`;\n\n  // Custom Y-axis tick rendering\n  const emotionLabels = [\"Happy\", \"Excited\", \"Funny\", \"Surprised\", \"Sadness\", \"Stoic\", \"Anger\"];\n\n  // Custom Y-axis tick rendering with emoji and custom text\n  const renderCustomYAxisTick = tickProps => {\n    const {\n      x,\n      y,\n      payload\n    } = tickProps;\n    const imageIndex = payload.value; // Use the emotion value to find the image\n    const imgSrc = emotionImages[imageIndex];\n    const imageSize = 30; // Set a fixed image size\n    const leftOffset = 25; // Adjust this value to move the emoji to the left\n    const textYOffset = 10; // Vertical space between emoji and text\n\n    // Adjusted positioning for moving to the left and centering vertically\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${x - imageSize / 2 - leftOffset}, ${y})`,\n      children: [/*#__PURE__*/_jsxDEV(\"image\", {\n        href: imgSrc,\n        width: imageSize,\n        height: imageSize,\n        y: -imageSize / 2 // Center the emoji vertically\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: imageSize / 2 // Align the text in the center\n        ,\n        y: imageSize / 2 + textYOffset // Position text below emoji\n        ,\n        fontSize: 12 // Adjust text size\n        ,\n        textAnchor: \"middle\" // Center-align the text horizontally\n        ,\n        fill: \"#333\" // Text color\n        ,\n        children: [emotionLabels[payload.value], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this);\n  };\n  const renderCustomXAxisTick = tickProps => {\n    const {\n      x,\n      y,\n      payload\n    } = tickProps;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${x}, ${y + 20})`,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"text\", {\n        x: 6 // Positioning the text at the tick position\n        ,\n        y: 2 // Use the adjusted y position\n        ,\n        fontSize: 14 // Set the font size for better visibility\n        ,\n        textAnchor: \"middle\" // Center the text horizontally\n        ,\n        fill: \"#333\" // Text color\n        ,\n        children: [payload.value, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this);\n  };\n};\n_c = EmotionChartAnalysis;\nexport default EmotionChartAnalysis;\nvar _c;\n$RefreshReg$(_c, \"EmotionChartAnalysis\");","map":{"version":3,"names":["React","happyFace","grinningFace","funnyFace","surpriseFace","sadFace","staticFace","angryFace","jsxDEV","_jsxDEV","emotionData","timeRange","time","emotionValue","emotion","emojiSrc","sliderData","color","emotionImages","EmotionChartAnalysis","labelFormatter","value","emotionLabels","renderCustomYAxisTick","tickProps","x","y","payload","imageIndex","imgSrc","imageSize","leftOffset","textYOffset","transform","children","href","width","height","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","textAnchor","fill","renderCustomXAxisTick","_c","$RefreshReg$"],"sources":["/media/tarun/ITB/code/work/video-verse/Videolution-Analyzer-App/src/Components/HeatChart/HeatChart.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n\tAreaChart,\n\tArea,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tResponsiveContainer,\n} from \"recharts\";\nimport happyFace from \"../../assets/Happy.png\";\nimport grinningFace from \"../../assets/GrinningFaceWithBigEyes.png\";\nimport funnyFace from \"../../assets/Rolling On The Floor Laughing.png\";\nimport surpriseFace from \"../../assets/Flushed Face.png\";\nimport sadFace from \"../../assets/Pensive Face.png\";\nimport staticFace from \"../../assets/Neutral.png\";\nimport angryFace from \"../../assets/AngryFace.png\";\nimport ellipse from \"../../assets/Ellipse 1989.svg\";\n\n// Unified data for the chart and analysis\nconst emotionData = [\n\t{\n\t\ttimeRange: \"0:00 - 0:30\",\n\t\ttime: \"0:00\",\n\t\temotionValue: 1,\n\t\temotion: \"Calm and Neutral\",\n\t\temojiSrc: surpriseFace,\n\t},\n\t{\n\t\ttimeRange: \"0:31 - 0:55\",\n\t\ttime: \"0:30\",\n\t\temotionValue: 2,\n\t\temotion: \"Slightly Confused\",\n\t\temojiSrc: surpriseFace,\n\t},\n\t{\n\t\ttimeRange: \"0:56 - 1:15\",\n\t\ttime: \"1:00\",\n\t\temotionValue: 1,\n\t\temotion: \"Happy and Engaged\",\n\t\temojiSrc: grinningFace,\n\t},\n\t{\n\t\ttimeRange: \"1:16 - 1:45\",\n\t\ttime: \"2:00\",\n\t\temotionValue: 5,\n\t\temotion: \"Mild surpriseFace\",\n\t\temojiSrc: happyFace,\n\t},\n\t{\n\t\ttimeRange: \"1:46 - 2:10\",\n\t\ttime: \"4:00\",\n\t\temotionValue: 4,\n\t\temotion: \"Increasing Excitement\",\n\t\temojiSrc: grinningFace,\n\t},\n\t{\n\t\ttimeRange: \"2:11 - 2:45\",\n\t\ttime: \"5:30\",\n\t\temotionValue: 3,\n\t\temotion: \"Emotional Dip\",\n\t\temojiSrc: happyFace,\n\t},\n\t{\n\t\ttimeRange: \"2:46 - 3:10\",\n\t\ttime: \"7:00\",\n\t\temotionValue: 5,\n\t\temotion: \"Tension Rising\",\n\t\temojiSrc: grinningFace,\n\t},\n\t{\n\t\ttimeRange: \"3:11 - 3:33\",\n\t\ttime: \"9:00\",\n\t\temotionValue: 6,\n\t\temotion: \"Very sadFace and Emotional\",\n\t\temojiSrc: surpriseFace,\n\t},\n];\nconst sliderData = [\n\t{\n\t\temojiSrc: angryFace, // replace with your emoji image paths\n\t\tcolor: \"bg-red-500\", // darker gray for inactive states\n\t},\n\t{\n\t\temojiSrc: sadFace,\n\t\tcolor: \"bg-orange-400\", // lighter gray\n\t},\n\t{\n\t\temojiSrc: staticFace,\n\t\tcolor: \"bg-yellow-400\", // even lighter gray\n\t},\n\t{\n\t\temojiSrc: happyFace,\n\t\tcolor: \"bg-green-400\", // another gray\n\t},\n\t{\n\t\temojiSrc: surpriseFace,\n\t\tcolor: \"bg-green-500\", // green for the active/highlighted state\n\t},\n];\n\n// Mapping images for the graph Y-Axis based on the emotion value\nconst emotionImages = [\n\thappyFace,\n\tgrinningFace,\n\tfunnyFace,\n\tsurpriseFace,\n\tsadFace,\n\tstaticFace,\n\tangryFace,\n];\n\nconst EmotionChartAnalysis: React.FC = () => {\n\tconst labelFormatter = (value: any): string => `Time: ${value}`;\n\n\t// Custom Y-axis tick rendering\n\tconst emotionLabels = [\n\t\t\"Happy\",\n\t\t\"Excited\",\n\t\t\"Funny\",\n\t\t\"Surprised\",\n\t\t\"Sadness\",\n\t\t\"Stoic\",\n\t\t\"Anger\",\n\t];\n\n\t// Custom Y-axis tick rendering with emoji and custom text\n\tconst renderCustomYAxisTick = (tickProps: any) => {\n\t\tconst { x, y, payload } = tickProps;\n\t\tconst imageIndex = payload.value; // Use the emotion value to find the image\n\t\tconst imgSrc = emotionImages[imageIndex];\n\n\t\tconst imageSize = 30; // Set a fixed image size\n\t\tconst leftOffset = 25; // Adjust this value to move the emoji to the left\n\t\tconst textYOffset = 10; // Vertical space between emoji and text\n\n\t\t// Adjusted positioning for moving to the left and centering vertically\n\t\treturn (\n\t\t\t<g transform={`translate(${x - imageSize / 2 - leftOffset}, ${y})`}>\n\t\t\t\t{/* Emoji */}\n\t\t\t\t<image\n\t\t\t\t\thref={imgSrc}\n\t\t\t\t\twidth={imageSize}\n\t\t\t\t\theight={imageSize}\n\t\t\t\t\ty={-imageSize / 2} // Center the emoji vertically\n\t\t\t\t/>\n\t\t\t\t{/* Text below the emoji */}\n\t\t\t\t<text\n\t\t\t\t\tx={imageSize / 2} // Align the text in the center\n\t\t\t\t\ty={imageSize / 2 + textYOffset} // Position text below emoji\n\t\t\t\t\tfontSize={12} // Adjust text size\n\t\t\t\t\ttextAnchor=\"middle\" // Center-align the text horizontally\n\t\t\t\t\tfill=\"#333\" // Text color\n\t\t\t\t>\n\t\t\t\t\t{emotionLabels[payload.value]} {/* Display custom emotion label */}\n\t\t\t\t</text>\n\t\t\t</g>\n\t\t);\n\t};\n\tconst renderCustomXAxisTick = (tickProps: any) => {\n\t\tconst { x, y, payload } = tickProps;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${x}, ${y + 20})`}>\n\t\t\t\t{\" \"}\n\t\t\t\t{/* Move down by 20 units */}\n\t\t\t\t<text\n\t\t\t\t\tx={6} // Positioning the text at the tick position\n\t\t\t\t\ty={2} // Use the adjusted y position\n\t\t\t\t\tfontSize={14} // Set the font size for better visibility\n\t\t\t\t\ttextAnchor=\"middle\" // Center the text horizontally\n\t\t\t\t\tfill=\"#333\" // Text color\n\t\t\t\t>\n\t\t\t\t\t{payload.value} {/* Display the time value */}\n\t\t\t\t</text>\n\t\t\t</g>\n\t\t);\n\t};\n};\n\nexport default EmotionChartAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}