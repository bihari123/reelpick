{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/Upload/hooks/useFileUpload.ts\n\nimport { useState, useCallback } from \"react\";\nimport { FileUploadService } from \"../services/fileUploadService\";\nexport const useFileUpload = () => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [status, setStatus] = useState(\"idle\");\n  const [error, setError] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const uploadService = new FileUploadService();\n  const resetUpload = useCallback(() => {\n    setProgress(0);\n    setStatus(\"idle\");\n    setError(null);\n    setIsUploading(false);\n  }, []);\n  const cancelUpload = useCallback(() => {\n    uploadService.cancelProcessing();\n    resetUpload();\n  }, [resetUpload]);\n  const uploadFile = useCallback(async file => {\n    try {\n      setIsUploading(true);\n      setError(null);\n      await uploadService.uploadFile(file, {\n        onProgress: setProgress,\n        onStatusChange: setStatus,\n        onSuccess: () => {\n          setIsUploading(false);\n          setStatus(\"completed\");\n        },\n        onError: error => {\n          setError(error.message);\n          setIsUploading(false);\n          setStatus(\"failed\");\n        }\n      });\n    } catch (error) {\n      setError(error.message);\n      setIsUploading(false);\n      setStatus(\"failed\");\n    }\n  }, []);\n  return {\n    progress,\n    status,\n    error,\n    isUploading,\n    uploadFile,\n    resetUpload,\n    cancelUpload\n  };\n};\n_s(useFileUpload, \"qVg79jTDkunuTaFXdsRCqwOXeec=\");","map":{"version":3,"names":["useState","useCallback","FileUploadService","useFileUpload","_s","progress","setProgress","status","setStatus","error","setError","isUploading","setIsUploading","uploadService","resetUpload","cancelUpload","cancelProcessing","uploadFile","file","onProgress","onStatusChange","onSuccess","onError","message"],"sources":["/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/Upload/hooks/useFileUpload.ts"],"sourcesContent":["// src/components/Upload/hooks/useFileUpload.ts\n\nimport { useState, useCallback } from \"react\";\nimport { FileUploadService } from \"../services/fileUploadService\";\nimport { ProcessingStep } from \"../utils/upload.types\";\n\ninterface UseFileUploadReturn {\n\tprogress: number;\n\tstatus: ProcessingStep;\n\terror: string | null;\n\tisUploading: boolean;\n\tuploadFile: (file: File) => Promise<void>;\n\tresetUpload: () => void;\n\tcancelUpload: () => void;\n}\n\nexport const useFileUpload = (): UseFileUploadReturn => {\n\tconst [progress, setProgress] = useState<number>(0);\n\tconst [status, setStatus] = useState<ProcessingStep>(\"idle\");\n\tconst [error, setError] = useState<string | null>(null);\n\tconst [isUploading, setIsUploading] = useState<boolean>(false);\n\n\tconst uploadService = new FileUploadService();\n\n\tconst resetUpload = useCallback(() => {\n\t\tsetProgress(0);\n\t\tsetStatus(\"idle\");\n\t\tsetError(null);\n\t\tsetIsUploading(false);\n\t}, []);\n\n\tconst cancelUpload = useCallback(() => {\n\t\tuploadService.cancelProcessing();\n\t\tresetUpload();\n\t}, [resetUpload]);\n\n\tconst uploadFile = useCallback(async (file: File) => {\n\t\ttry {\n\t\t\tsetIsUploading(true);\n\t\t\tsetError(null);\n\n\t\t\tawait uploadService.uploadFile(file, {\n\t\t\t\tonProgress: setProgress,\n\t\t\t\tonStatusChange: setStatus,\n\t\t\t\tonSuccess: () => {\n\t\t\t\t\tsetIsUploading(false);\n\t\t\t\t\tsetStatus(\"completed\");\n\t\t\t\t},\n\t\t\t\tonError: (error) => {\n\t\t\t\t\tsetError(error.message);\n\t\t\t\t\tsetIsUploading(false);\n\t\t\t\t\tsetStatus(\"failed\");\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tsetError((error as Error).message);\n\t\t\tsetIsUploading(false);\n\t\t\tsetStatus(\"failed\");\n\t\t}\n\t}, []);\n\n\treturn {\n\t\tprogress,\n\t\tstatus,\n\t\terror,\n\t\tisUploading,\n\t\tuploadFile,\n\t\tresetUpload,\n\t\tcancelUpload,\n\t};\n};\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,iBAAiB,QAAQ,+BAA+B;AAajE,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAA2B;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAS,CAAC,CAAC;EACnD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAiB,MAAM,CAAC;EAC5D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAE9D,MAAMa,aAAa,GAAG,IAAIX,iBAAiB,CAAC,CAAC;EAE7C,MAAMY,WAAW,GAAGb,WAAW,CAAC,MAAM;IACrCK,WAAW,CAAC,CAAC,CAAC;IACdE,SAAS,CAAC,MAAM,CAAC;IACjBE,QAAQ,CAAC,IAAI,CAAC;IACdE,cAAc,CAAC,KAAK,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGd,WAAW,CAAC,MAAM;IACtCY,aAAa,CAACG,gBAAgB,CAAC,CAAC;IAChCF,WAAW,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMG,UAAU,GAAGhB,WAAW,CAAC,MAAOiB,IAAU,IAAK;IACpD,IAAI;MACHN,cAAc,CAAC,IAAI,CAAC;MACpBF,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMG,aAAa,CAACI,UAAU,CAACC,IAAI,EAAE;QACpCC,UAAU,EAAEb,WAAW;QACvBc,cAAc,EAAEZ,SAAS;QACzBa,SAAS,EAAEA,CAAA,KAAM;UAChBT,cAAc,CAAC,KAAK,CAAC;UACrBJ,SAAS,CAAC,WAAW,CAAC;QACvB,CAAC;QACDc,OAAO,EAAGb,KAAK,IAAK;UACnBC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;UACvBX,cAAc,CAAC,KAAK,CAAC;UACrBJ,SAAS,CAAC,QAAQ,CAAC;QACpB;MACD,CAAC,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfC,QAAQ,CAAED,KAAK,CAAWc,OAAO,CAAC;MAClCX,cAAc,CAAC,KAAK,CAAC;MACrBJ,SAAS,CAAC,QAAQ,CAAC;IACpB;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACNH,QAAQ;IACRE,MAAM;IACNE,KAAK;IACLE,WAAW;IACXM,UAAU;IACVH,WAAW;IACXC;EACD,CAAC;AACF,CAAC;AAACX,EAAA,CAtDWD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}