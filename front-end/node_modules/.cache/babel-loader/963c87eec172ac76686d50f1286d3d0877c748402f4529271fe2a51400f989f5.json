{"ast":null,"code":"var _jsxFileName = \"/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/MainContent/MainContent.tsx\",\n  _s = $RefreshSig$();\n// src/Components/MainContent/MainContent.tsx\n\nimport React, { useState } from \"react\";\nimport UploadForm from \"../UploadForm/UploadForm\";\nimport UploadSubtitleOrSong from \"./UploadSubtitleOrSong\";\nimport { FileUploadService } from \"../services/fileUploadService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContent = () => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [processingStep, setProcessingStep] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const uploadService = new FileUploadService();\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setUploading(true);\n    setProcessingStep(\"analyzing\");\n    setProgress(0);\n    try {\n      await uploadService.uploadFile(file, {\n        onProgress: progressValue => {\n          setProgress(progressValue);\n        },\n        onStatusChange: status => {\n          setProcessingStep(status);\n        },\n        onSuccess: () => {\n          setUploading(false);\n          setProcessingStep(\"done\");\n        },\n        onError: error => {\n          console.error(\"Upload failed:\", error);\n          setUploading(false);\n          setProcessingStep(null);\n          alert(\"Upload failed: \" + error.message);\n        }\n      });\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      setUploading(false);\n      setProcessingStep(null);\n      alert(\"Upload failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"flex-grow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto text-center py-12 font-inter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-gray-800 mb-6\",\n        children: [\"AI-Powered\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-transparent bg-gradient-emotion bg-clip-text\",\n          children: \"Emotion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" \", \"Analysis\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600 mb-10\",\n        children: \"Upload your video and let our AI analyze the emotional impact of each scene.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), !uploading && !selectedFile ? /*#__PURE__*/_jsxDEV(UploadForm, {\n        onFileSelect: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(UploadSubtitleOrSong, {\n        progress: progress,\n        step: processingStep,\n        selectedFile: selectedFile,\n        setSelectedFile: setSelectedFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mt-28\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-gray-700 mb-4\",\n          children: \"- Introduction -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-base\",\n          children: \"Welcome to our AI-powered video analysis tool! Our AI models are designed to analyze your video scene-by-scene, detecting emotional intensity, analyzing key moments, and determining how each scene may impact viewers. Start your journey by uploading a video, and the AI will break down the emotional journey of your content and provide actionable insights.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MainContent, \"Y/b3HPhVCvDOmvn0BuC3uEAwfYM=\");\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useState","UploadForm","UploadSubtitleOrSong","FileUploadService","jsxDEV","_jsxDEV","MainContent","_s","uploading","setUploading","progress","setProgress","processingStep","setProcessingStep","selectedFile","setSelectedFile","uploadService","handleFileSelect","file","uploadFile","onProgress","progressValue","onStatusChange","status","onSuccess","onError","error","console","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","step","_c","$RefreshReg$"],"sources":["/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/MainContent/MainContent.tsx"],"sourcesContent":["// src/Components/MainContent/MainContent.tsx\n\nimport React, { useState } from \"react\";\nimport UploadForm from \"../UploadForm/UploadForm\";\nimport UploadSubtitleOrSong from \"./UploadSubtitleOrSong\";\nimport { ProcessingStep } from \"../types/upload.types\";\nimport { FileUploadService } from \"../services/fileUploadService\";\n\nconst MainContent = () => {\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [processingStep, setProcessingStep] = useState<ProcessingStep>(null);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const uploadService = new FileUploadService();\n\n  const handleFileSelect = async (file: File) => {\n    setSelectedFile(file);\n    setUploading(true);\n    setProcessingStep(\"analyzing\");\n    setProgress(0);\n\n    try {\n      await uploadService.uploadFile(file, {\n        onProgress: (progressValue) => {\n          setProgress(progressValue);\n        },\n        onStatusChange: (status) => {\n          setProcessingStep(status as ProcessingStep);\n        },\n        onSuccess: () => {\n          setUploading(false);\n          setProcessingStep(\"done\");\n        },\n        onError: (error: Error) => {\n          console.error(\"Upload failed:\", error);\n          setUploading(false);\n          setProcessingStep(null);\n          alert(\"Upload failed: \" + error.message);\n        },\n      });\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      setUploading(false);\n      setProcessingStep(null);\n      alert(\"Upload failed. Please try again.\");\n    }\n  };\n\n  return (\n    <main className=\"flex-grow\">\n      <div className=\"max-w-4xl mx-auto text-center py-12 font-inter\">\n        <h1 className=\"text-4xl font-bold text-gray-800 mb-6\">\n          AI-Powered{\" \"}\n          <span className=\"text-transparent bg-gradient-emotion bg-clip-text\">\n            Emotion\n          </span>{\" \"}\n          Analysis\n        </h1>\n        <p className=\"text-lg text-gray-600 mb-10\">\n          Upload your video and let our AI analyze the emotional impact of each\n          scene.\n        </p>\n\n        {!uploading && !selectedFile ? (\n          <UploadForm onFileSelect={handleFileSelect} />\n        ) : (\n          <UploadSubtitleOrSong\n            progress={progress}\n            step={processingStep as ProcessingStep}\n            selectedFile={selectedFile as File}\n            setSelectedFile={setSelectedFile}\n          />\n        )}\n\n        <section className=\"mt-28\">\n          <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">\n            - Introduction -\n          </h2>\n          <p className=\"text-gray-500 text-base\">\n            Welcome to our AI-powered video analysis tool! Our AI models are\n            designed to analyze your video scene-by-scene, detecting emotional\n            intensity, analyzing key moments, and determining how each scene may\n            impact viewers. Start your journey by uploading a video, and the AI\n            will break down the emotional journey of your content and provide\n            actionable insights.\n          </p>\n        </section>\n      </div>\n    </main>\n  );\n};\n\nexport default MainContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}