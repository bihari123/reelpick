{"ast":null,"code":"var _jsxFileName = \"/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/MainContent/UploadForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Button from '../Button/Button';\nimport upload from '../../assets/Upload.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = ({\n  onFileSelect\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const [dragging, setDragging] = useState(false);\n  const maxSize = 500 * 1024 * 1024; // 500MB\n\n  const openFileDialog = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  const handleFileChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file && validateFile(file)) {\n      onFileSelect(file);\n    }\n  };\n  const handleDrop = event => {\n    var _event$dataTransfer$f;\n    event.preventDefault();\n    event.stopPropagation();\n    setDragging(false);\n    const file = (_event$dataTransfer$f = event.dataTransfer.files) === null || _event$dataTransfer$f === void 0 ? void 0 : _event$dataTransfer$f[0];\n    if (file && validateFile(file)) {\n      onFileSelect(file);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    setDragging(true);\n  };\n  const handleDragLeave = () => {\n    setDragging(false);\n  };\n  const validateFile = file => {\n    const fileType = file.type;\n    const fileSize = file.size;\n    if (fileType !== 'application/x-subrip' && !file.name.endsWith('.srt')) {\n      alert('Please upload a valid .srt file.');\n      return false;\n    }\n    if (fileSize > maxSize) {\n      alert('File size exceeds 500MB.');\n      return false;\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `border-2 border-dashed border-green-500 rounded-lg p-12 bg-white \n        ${dragging ? 'border-green-600' : ''}`,\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center mb-4 border-2 border-green-500 h-16 w-16 rounded-2xl mx-auto shadow-outside-custom\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: upload,\n        alt: \"upload\",\n        className: \"h-16 w-16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 mb-4\",\n      children: \"Drag & Drop or Choose file to upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-400\",\n      children: \"Supported formats: .srt (Max size: 500MB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      type: \"file\",\n      accept: \".srt\",\n      onChange: handleFileChange,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mt-4 bg-green-500 text-white py-2 px-6 rounded hover:bg-green-600\",\n      onClick: openFileDialog,\n      children: \"Upload Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"cNj4ZgUJv3k/6GDslpOlD+u3D08=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useRef","useState","Button","upload","jsxDEV","_jsxDEV","UploadForm","onFileSelect","_s","fileInputRef","dragging","setDragging","maxSize","openFileDialog","current","click","handleFileChange","event","_event$target$files","file","target","files","validateFile","handleDrop","_event$dataTransfer$f","preventDefault","stopPropagation","dataTransfer","handleDragOver","handleDragLeave","fileType","type","fileSize","size","name","endsWith","alert","className","onDrop","onDragOver","onDragLeave","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","style","display","onClick","_c","$RefreshReg$"],"sources":["/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/MainContent/UploadForm.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport Button from '../Button/Button';\nimport upload from '../../assets/Upload.svg';\n\ninterface UploadFormProps {\n  onFileSelect: (file: File) => void;\n}\n\nconst UploadForm: React.FC<UploadFormProps> = ({ onFileSelect }) => {\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [dragging, setDragging] = useState(false);\n  const maxSize = 500 * 1024 * 1024; // 500MB\n\n  const openFileDialog = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && validateFile(file)) {\n      onFileSelect(file);\n    }\n  };\n\n  const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setDragging(false);\n\n    const file = event.dataTransfer.files?.[0];\n    if (file && validateFile(file)) {\n      onFileSelect(file);\n    }\n  };\n\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setDragging(true);\n  };\n\n  const handleDragLeave = () => {\n    setDragging(false);\n  };\n\n  const validateFile = (file: File) => {\n    const fileType = file.type;\n    const fileSize = file.size;\n\n    if (fileType !== 'application/x-subrip' && !file.name.endsWith('.srt')) {\n      alert('Please upload a valid .srt file.');\n      return false;\n    }\n    if (fileSize > maxSize) {\n      alert('File size exceeds 500MB.');\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div\n      className={`border-2 border-dashed border-green-500 rounded-lg p-12 bg-white \n        ${dragging ? 'border-green-600' : ''}`}\n      onDrop={handleDrop}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"flex justify-center items-center mb-4 border-2 border-green-500 h-16 w-16 rounded-2xl mx-auto shadow-outside-custom\">\n        <img src={upload} alt=\"upload\" className=\"h-16 w-16\" />\n      </div>\n      <p className=\"text-gray-500 mb-4\">Drag & Drop or Choose file to upload</p>\n      <p className=\"text-sm text-gray-400\">Supported formats: .srt (Max size: 500MB)</p>\n\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".srt\"\n        onChange={handleFileChange}\n        style={{ display: 'none' }}\n      />\n      <Button\n        className=\"mt-4 bg-green-500 text-white py-2 px-6 rounded hover:bg-green-600\"\n        onClick={openFileDialog}\n      >\n        Upload Now\n      </Button>\n    </div>\n  );\n};\n\nexport default UploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}