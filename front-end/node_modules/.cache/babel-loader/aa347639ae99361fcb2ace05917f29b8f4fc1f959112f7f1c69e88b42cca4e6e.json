{"ast":null,"code":"var _jsxFileName = \"/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/MainContent/UploadSubtitleOrSong.tsx\";\n// src/Components/MainContent/UploadSubtitleOrSong.tsx\n\nimport React from \"react\";\nimport ProgressBar from \"../Upload/ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadSubtitleOrSong = ({\n  progress,\n  step,\n  selectedFile,\n  setSelectedFile,\n  onCancel,\n  error\n}) => {\n  const getStepDescription = step => {\n    switch (step) {\n      case \"uploading\":\n        return \"Uploading your file...\";\n      case \"analyzing\":\n        return \"Analyzing content...\";\n      case \"processing\":\n        return \"Processing emotional patterns...\";\n      case \"completed\":\n        return \"Analysis completed!\";\n      case \"failed\":\n        return \"Processing failed\";\n      default:\n        return \"Preparing...\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-2\",\n        children: getStepDescription(step)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress,\n      fileSize: selectedFile.size,\n      fileName: selectedFile.name,\n      status: step,\n      onCancel: onCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = UploadSubtitleOrSong;\nexport default UploadSubtitleOrSong;\nvar _c;\n$RefreshReg$(_c, \"UploadSubtitleOrSong\");","map":{"version":3,"names":["React","ProgressBar","jsxDEV","_jsxDEV","UploadSubtitleOrSong","progress","step","selectedFile","setSelectedFile","onCancel","error","getStepDescription","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fileSize","size","name","status","_c","$RefreshReg$"],"sources":["/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/MainContent/UploadSubtitleOrSong.tsx"],"sourcesContent":["// src/Components/MainContent/UploadSubtitleOrSong.tsx\n\nimport React from \"react\";\nimport { ProcessingStep } from \"../Upload/utils/upload.types\";\nimport ProgressBar from \"../Upload/ProgressBar\";\n\ninterface UploadSubtitleOrSongProps {\n  progress: number;\n  step: ProcessingStep;\n  selectedFile: File;\n  setSelectedFile: React.Dispatch<React.SetStateAction<File | null>>;\n  onCancel?: () => void;\n  error?: string | null;\n}\n\nconst UploadSubtitleOrSong: React.FC<UploadSubtitleOrSongProps> = ({\n  progress,\n  step,\n  selectedFile,\n  setSelectedFile,\n  onCancel,\n  error,\n}) => {\n  const getStepDescription = (step: ProcessingStep): string => {\n    switch (step) {\n      case \"uploading\":\n        return \"Uploading your file...\";\n      case \"analyzing\":\n        return \"Analyzing content...\";\n      case \"processing\":\n        return \"Processing emotional patterns...\";\n      case \"completed\":\n        return \"Analysis completed!\";\n      case \"failed\":\n        return \"Processing failed\";\n      default:\n        return \"Preparing...\";\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto\">\n      <div className=\"text-center mb-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n          {getStepDescription(step)}\n        </h3>\n        {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n      </div>\n\n      <ProgressBar\n        progress={progress}\n        fileSize={selectedFile.size}\n        fileName={selectedFile.name}\n        status={step}\n        onCancel={onCancel}\n      />\n    </div>\n  );\n};\n\nexport default UploadSubtitleOrSong;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,WAAW,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWhD,MAAMC,oBAAyD,GAAGA,CAAC;EACjEC,QAAQ;EACRC,IAAI;EACJC,YAAY;EACZC,eAAe;EACfC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMC,kBAAkB,GAAIL,IAAoB,IAAa;IAC3D,QAAQA,IAAI;MACV,KAAK,WAAW;QACd,OAAO,wBAAwB;MACjC,KAAK,WAAW;QACd,OAAO,sBAAsB;MAC/B,KAAK,YAAY;QACf,OAAO,kCAAkC;MAC3C,KAAK,WAAW;QACd,OAAO,qBAAqB;MAC9B,KAAK,QAAQ;QACX,OAAO,mBAAmB;MAC5B;QACE,OAAO,cAAc;IACzB;EACF,CAAC;EAED,oBACEH,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BV,OAAA;MAAKS,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BV,OAAA;QAAIS,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EACnDF,kBAAkB,CAACL,IAAI;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EACJP,KAAK,iBAAIP,OAAA;QAAGS,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAEH;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAENd,OAAA,CAACF,WAAW;MACVI,QAAQ,EAAEA,QAAS;MACnBa,QAAQ,EAAEX,YAAY,CAACY,IAAK;MAC5BL,QAAQ,EAAEP,YAAY,CAACa,IAAK;MAC5BC,MAAM,EAAEf,IAAK;MACbG,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GA3CIlB,oBAAyD;AA6C/D,eAAeA,oBAAoB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}