{"ast":null,"code":"var _jsxFileName = \"/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/Upload/UploadForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/Upload/UploadForm.tsx\n\nimport React from \"react\";\nimport { useFileUpload } from \"./hooks/useFileUpload\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport { formatFileSize } from \"./utils/fileValidation\";\nimport { UPLOAD_CONFIG } from \"./constants/upload.constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const {\n    progress,\n    status,\n    error,\n    isUploading,\n    uploadFile,\n    resetUpload\n  } = useFileUpload();\n  const [dragActive, setDragActive] = React.useState(false);\n  const inputRef = React.useRef(null);\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = async e => {\n    var _e$dataTransfer$files;\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const file = (_e$dataTransfer$files = e.dataTransfer.files) === null || _e$dataTransfer$files === void 0 ? void 0 : _e$dataTransfer$files[0];\n    if (file) {\n      await uploadFile(file);\n    }\n  };\n  const handleChange = async e => {\n    var _e$target$files;\n    e.preventDefault();\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      await uploadFile(file);\n    }\n  };\n  const handleButtonClick = () => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-xl mx-auto\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-100 text-red-700 rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `relative ${isUploading ? \"pointer-events-none opacity-50\" : \"\"}`,\n      onDragEnter: handleDrag,\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"file\",\n        className: \"hidden\",\n        accept: UPLOAD_CONFIG.ALLOWED_TYPES.join(\",\"),\n        onChange: handleChange,\n        disabled: isUploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `\n            flex flex-col items-center justify-center w-full h-64\n            border-2 border-dashed rounded-lg\n            cursor-pointer\n            ${dragActive ? \"border-green-600 bg-green-50\" : \"border-gray-300 bg-gray-50\"}\n            hover:bg-gray-100\n          `,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-center pt-5 pb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-10 h-10 mb-3 text-gray-400\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2 text-sm text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Click to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), \" or drag and drop\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: [\"SRT files only (max. \", formatFileSize(UPLOAD_CONFIG.MAX_FILE_SIZE), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), dragActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 w-full h-full\",\n        onDragEnter: handleDrag,\n        onDragLeave: handleDrag,\n        onDragOver: handleDrag,\n        onDrop: handleDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress,\n        fileSize: 0 // You'll need to store the file size when uploading\n        ,\n        fileName: \"Uploading file...\" // You'll need to store the filename when uploading\n        ,\n        status: status,\n        onCancel: resetUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), status === \"done\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-green-100 text-green-700 rounded\",\n      children: \"Upload completed successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"oXsyUrWGhB7EK2dVVI/tJXc60nM=\", false, function () {\n  return [useFileUpload];\n});\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useFileUpload","ProgressBar","formatFileSize","UPLOAD_CONFIG","jsxDEV","_jsxDEV","UploadForm","_s","progress","status","error","isUploading","uploadFile","resetUpload","dragActive","setDragActive","useState","inputRef","useRef","handleDrag","e","preventDefault","stopPropagation","type","handleDrop","_e$dataTransfer$files","file","dataTransfer","files","handleChange","_e$target$files","target","handleButtonClick","_inputRef$current","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnter","onSubmit","ref","accept","ALLOWED_TYPES","join","onChange","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","MAX_FILE_SIZE","onDragLeave","onDragOver","onDrop","fileSize","onCancel","_c","$RefreshReg$"],"sources":["/media/tarun/ITB/code/work/thinkelution/Videolution-Analyzer-App/src/Components/Upload/UploadForm.tsx"],"sourcesContent":["// src/components/Upload/UploadForm.tsx\n\nimport React from \"react\";\nimport { useFileUpload } from \"./hooks/useFileUpload\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport { formatFileSize } from \"./utils/fileValidation\";\nimport { UPLOAD_CONFIG } from \"./constants/upload.constants\";\n\nconst UploadForm: React.FC = () => {\n  const { progress, status, error, isUploading, uploadFile, resetUpload } =\n    useFileUpload();\n\n  const [dragActive, setDragActive] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const handleDrag = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = async (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n\n    const file = e.dataTransfer.files?.[0];\n    if (file) {\n      await uploadFile(file);\n    }\n  };\n\n  const handleChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const file = e.target.files?.[0];\n    if (file) {\n      await uploadFile(file);\n    }\n  };\n\n  const handleButtonClick = () => {\n    inputRef.current?.click();\n  };\n\n  return (\n    <div className=\"w-full max-w-xl mx-auto\">\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-100 text-red-700 rounded\">{error}</div>\n      )}\n\n      <form\n        className={`relative ${isUploading ? \"pointer-events-none opacity-50\" : \"\"}`}\n        onDragEnter={handleDrag}\n        onSubmit={(e) => e.preventDefault()}\n      >\n        <input\n          ref={inputRef}\n          type=\"file\"\n          className=\"hidden\"\n          accept={UPLOAD_CONFIG.ALLOWED_TYPES.join(\",\")}\n          onChange={handleChange}\n          disabled={isUploading}\n        />\n\n        <label\n          className={`\n            flex flex-col items-center justify-center w-full h-64\n            border-2 border-dashed rounded-lg\n            cursor-pointer\n            ${dragActive ? \"border-green-600 bg-green-50\" : \"border-gray-300 bg-gray-50\"}\n            hover:bg-gray-100\n          `}\n        >\n          <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n            <svg\n              className=\"w-10 h-10 mb-3 text-gray-400\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n              />\n            </svg>\n            <p className=\"mb-2 text-sm text-gray-500\">\n              <span className=\"font-semibold\">Click to upload</span> or drag and\n              drop\n            </p>\n            <p className=\"text-xs text-gray-500\">\n              SRT files only (max. {formatFileSize(UPLOAD_CONFIG.MAX_FILE_SIZE)}\n              )\n            </p>\n          </div>\n        </label>\n\n        {dragActive && (\n          <div\n            className=\"absolute inset-0 w-full h-full\"\n            onDragEnter={handleDrag}\n            onDragLeave={handleDrag}\n            onDragOver={handleDrag}\n            onDrop={handleDrop}\n          />\n        )}\n      </form>\n\n      {isUploading && (\n        <div className=\"mt-4\">\n          <ProgressBar\n            progress={progress}\n            fileSize={0} // You'll need to store the file size when uploading\n            fileName=\"Uploading file...\" // You'll need to store the filename when uploading\n            status={status}\n            onCancel={resetUpload}\n          />\n        </div>\n      )}\n\n      {status === \"done\" && (\n        <div className=\"mt-4 p-4 bg-green-100 text-green-700 rounded\">\n          Upload completed successfully!\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}